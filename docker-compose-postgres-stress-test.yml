version: '3.3'

networks:
  monitor-net:
    driver: bridge

services:
  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: dockeruser
      POSTGRES_PASSWORD: dockerpassword
      POSTGRES_DB: dockerdb
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - monitor-net

  app:
    build: ./orderservice
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: dockerdb
      DB_USERNAME: dockeruser
      DB_PASSWORD: dockerpassword
      KAFKA_HOST: kafka:9092
      BROKER: POSTGRES
    networks:
      - monitor-net

  job:
    build: ./job
    ports:
      - "8085-9000:8080"
    depends_on:
      - postgres
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: dockerdb
      DB_USERNAME: dockeruser
      DB_PASSWORD: dockerpassword
      KAFKA_HOST: kafka:9092
      BROKER: POSTGRES
      IS_BATCH: false
    deploy:
      mode: replicated
      replicas: 1
    networks:
      - monitor-net

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
    depends_on:
      - cadvisor
    networks:
      - monitor-net

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    command:
      - '-port=9091'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 9091:9091
    deploy:
      mode: global
    networks:
      - monitor-net

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - monitor-net

volumes:
  postgres-data:
